#g=g+geom_point(aes(x=ex_vert_asi,y=loss_percent), size =3 , color = 'black', alpha=0.8)
g=g+geom_smooth(method = lm, color = 'red')
g
g<- ggplot(mw_claims,aes(x=abs(max_later_g),y=loss_percent) )
#g= g + xlab('ASI"')
#g= g + xlab('Loss Percent %')
g=g+geom_point(size =2 , color = 'black', alpha=0.8)
#g=g+geom_point(aes(x=ex_vert_asi,y=loss_percent), size =3 , color = 'black', alpha=0.8)
g=g+geom_smooth(method = lm, color = 'red')
g
g<- ggplot(mw_claims,aes(x=abs(max_later_g),y=ex_vert_asi) )
#g= g + xlab('ASI"')
#g= g + xlab('Loss Percent %')
g=g+geom_point(size =2 , color = 'black', alpha=0.8)
#g=g+geom_point(aes(x=ex_vert_asi,y=loss_percent), size =3 , color = 'black', alpha=0.8)
g=g+geom_smooth(method = lm, color = 'red')
g
g<- ggplot(mw_claims,aes(x=abs(ex_vert_asi),y=loss_percent) )
#g= g + xlab('ASI"')
#g= g + xlab('Loss Percent %')
g=g+geom_point(size =2 , color = 'black', alpha=0.8)
#g=g+geom_point(aes(x=ex_vert_asi,y=loss_percent), size =3 , color = 'black', alpha=0.8)
g=g+geom_smooth(method = lm, color = 'red')
g
hist(mw_claims&loss_percent)
hist(mw_claims$loss_percent)
hist(claims$loss_percent)
fit=lm(loss_percent ~ ex_vert_asi + speed + I(abs(max_later_g) + I(abs(max_long_g))
fit=lm(loss_percent ~ ex_vert_asi + speed + I(abs(max_later_g)) + I(abs(max_long_g)))
fit=lm(loss_percent ~ ex_vert_asi + speed + I(abs(max_later_g)) + I(abs(max_long_g)))
fit=lm(loss_percent ~ ex_vert_asi + speed + I(abs(max_later_g)) + I(abs(max_long_g)),data=claims)
fit=lm(loss_percent ~ ex_vert_asi + speed + I(abs(max_later_g)) + I(abs(max_long_g)),data=claims_cl)
plot(fit)
summary(fit)
fit=lm(loss_percent ~ ex_vert_asi + I(abs(max_long_g)),data=claims_cl)
summary(fit)
fit=lm(loss_percent ~ ex_vert_asi + speed + I(abs(max_later_g)) + I(abs(max_long_g)),data=claims_cl)
fit=lm(loss_percent ~ ex_vert_asi + speed + I(abs(max_later_g)) + I(abs(max_long_g)),data=mw_claims)
summary(fit)
mean(claims$loss_percent)
g<- ggplot(mw_claims,aes(x=abs(ex_vert_asi),y=loss_summ) )
#g= g + xlab('ASI"')
#g= g + xlab('Loss Percent %')
g=g+geom_point(size =2 , color = 'black', alpha=0.8)
#g=g+geom_point(aes(x=ex_vert_asi,y=loss_percent), size =3 , color = 'black', alpha=0.8)
g=g+geom_smooth(method = lm, color = 'red')
g
g<- ggplot(mw_claims,aes(x=abs(ex_vert_asi),y=loss_sum) )
#g= g + xlab('ASI"')
#g= g + xlab('Loss Percent %')
g=g+geom_point(size =2 , color = 'black', alpha=0.8)
#g=g+geom_point(aes(x=ex_vert_asi,y=loss_percent), size =3 , color = 'black', alpha=0.8)
g=g+geom_smooth(method = lm, color = 'red')
g
g<- ggplot(mw_claims,aes(x=abs(ins_cover),y=loss_sum) )
#g= g + xlab('ASI"')
#g= g + xlab('Loss Percent %')
g=g+geom_point(size =2 , color = 'black', alpha=0.8)
#g=g+geom_point(aes(x=ex_vert_asi,y=loss_percent), size =3 , color = 'black', alpha=0.8)
g=g+geom_smooth(method = lm, color = 'red')
g
str(claims)
summary(fit)
head(y)
fit=lm(loss_percent ~ ex_vert_asi + speed + I(abs(max_later_g)) + I(abs(max_long_g)),data=mw_claims)
summary(fit)
df=data.frame(predict(fit),mw_claims$loss_percent,c('predict','real'))
df=data.frame(predict(fit),mw_claims$loss_percent,row_names=c('predict','real'))
df=data.frame(predict(fit),mw_claims$loss_percent)
length(predict(fit))
length(claims$loss_percent)
length(mw_claims$loss_percent)
?hist
hist(claims$loss_percent, freq=FALSE)
hist(claims$loss_percent, breaks = 20)
hist(claims$loss_percent, breaks = 20,labels=TRUE)
mw_claims <- subset(claims_cl,loss_percent > 1 & loss_percent < 20 & ex_vert_asi < 0.5)
g<- ggplot(mw_claims,aes(x=abs(ins_cover),y=loss_sum) )
#g= g + xlab('ASI"')
#g= g + xlab('Loss Percent %')
g=g+geom_point(size =2 , color = 'black', alpha=0.8)
#g=g+geom_point(aes(x=ex_vert_asi,y=loss_percent), size =3 , color = 'black', alpha=0.8)
g=g+geom_smooth(method = lm, color = 'red')
g
g<- ggplot(mw_claims,aes(x=abs(ex_ver_asi),y=loss_percent) )
#g= g + xlab('ASI"')
#g= g + xlab('Loss Percent %')
g=g+geom_point(size =2 , color = 'black', alpha=0.8)
#g=g+geom_point(aes(x=ex_vert_asi,y=loss_percent), size =3 , color = 'black', alpha=0.8)
g=g+geom_smooth(method = lm, color = 'red')
g
g<- ggplot(mw_claims,aes(x=abs(ex_vert_asi),y=loss_percent) )
#g= g + xlab('ASI"')
#g= g + xlab('Loss Percent %')
g=g+geom_point(size =2 , color = 'black', alpha=0.8)
#g=g+geom_point(aes(x=ex_vert_asi,y=loss_percent), size =3 , color = 'black', alpha=0.8)
g=g+geom_smooth(method = lm, color = 'red')
g
10*60
mw_claims <- subset(claims_cl,loss_percent > 1 & loss_percent < 20 & abs(time_diff)<720 )
g<- ggplot(mw_claims,aes(x=abs(ex_vert_asi),y=loss_percent) )
#g= g + xlab('ASI"')
#g= g + xlab('Loss Percent %')
g=g+geom_point(size =2 , color = 'black', alpha=0.8)
#g=g+geom_point(aes(x=ex_vert_asi,y=loss_percent), size =3 , color = 'black', alpha=0.8)
g=g+geom_smooth(method = lm, color = 'red')
g
mw_claims <- subset(claims_cl,loss_percent > 1 & loss_percent < 20 & abs(time_diff)<720 & ex_vert_asi < 0.7 )
g<- ggplot(mw_claims,aes(x=abs(ex_vert_asi),y=loss_percent) )
#g= g + xlab('ASI"')
#g= g + xlab('Loss Percent %')
g=g+geom_point(size =2 , color = 'black', alpha=0.8)
#g=g+geom_point(aes(x=ex_vert_asi,y=loss_percent), size =3 , color = 'black', alpha=0.8)
g=g+geom_smooth(method = lm, color = 'red')
g
mw_claims <- subset(claims_cl,loss_percent > 5 & loss_percent < 20 & abs(time_diff)<720 & ex_vert_asi < 0.7 )
g<- ggplot(mw_claims,aes(x=abs(ex_vert_asi),y=loss_percent) )
#g= g + xlab('ASI"')
#g= g + xlab('Loss Percent %')
g=g+geom_point(size =2 , color = 'black', alpha=0.8)
#g=g+geom_point(aes(x=ex_vert_asi,y=loss_percent), size =3 , color = 'black', alpha=0.8)
g=g+geom_smooth(method = lm, color = 'red')
g
w_claims <- subset(claims,loss_percent > 5 & loss_percent < 20 & abs(time_diff)<720 & ex_vert_asi < 0.7 )
g<- ggplot(mw_claims,aes(x=abs(ex_vert_asi),y=loss_percent) )
#g= g + xlab('ASI"')
#g= g + xlab('Loss Percent %')
g=g+geom_point(size =2 , color = 'black', alpha=0.8)
#g=g+geom_point(aes(x=ex_vert_asi,y=loss_percent), size =3 , color = 'black', alpha=0.8)
g=g+geom_smooth(method = lm, color = 'red')
g
mw_claims <- subset(claims,loss_percent > 5 & loss_percent < 20 & abs(time_diff)<720 & ex_vert_asi < 0.7 )
g<- ggplot(mw_claims,aes(x=abs(ex_vert_asi),y=loss_percent) )
#g= g + xlab('ASI"')
#g= g + xlab('Loss Percent %')
g=g+geom_point(size =2 , color = 'black', alpha=0.8)
#g=g+geom_point(aes(x=ex_vert_asi,y=loss_percent), size =3 , color = 'black', alpha=0.8)
g=g+geom_smooth(method = lm, color = 'red')
g
mw_claims <- subset(claims,loss_percent > 2 & loss_percent < 30 & abs(time_diff)<1200 & ex_vert_asi < 0.7 )
g<- ggplot(mw_claims,aes(x=abs(ex_vert_asi),y=loss_percent) )
#g= g + xlab('ASI"')
#g= g + xlab('Loss Percent %')
g=g+geom_point(size =2 , color = 'black', alpha=0.8)
#g=g+geom_point(aes(x=ex_vert_asi,y=loss_percent), size =3 , color = 'black', alpha=0.8)
g=g+geom_smooth(method = lm, color = 'red')
g
library(ggplot2)
library(grid)
library(gridExtra)
library(lattice)
library(caret)
library(rpart)
library(rattle)
library(randomForest)
install.packages('carret')
install.packages(carret)
data(iris)
set.seed(17)
iris.urf <- randomForest(iris[, -5])
MDSplot(iris.urf, iris$Species)
head(iris[, -5])
str(iris)
rm_fit=randomForest(claims_cl$loss_percent)
iris[, -5]
iris[, 1]
iris[, -1]
head(claims_cl[, -1])
?set
?set.seed
rm_fit=randomForest(loss_percent ~ ., data=claims_cl, subset=c('ex_vert_asi', 'speed', 'max_long_g', 'max_later_g','impact_g'))
rm_fit=randomForest(loss_percent ~ ., data=claims_cl, subset=factor('ex_vert_asi', 'speed', 'max_long_g', 'max_later_g','impact_g'))
factor('ex_vert_asi', 'speed', 'max_long_g', 'max_later_g','impact_g')
as.factor('ex_vert_asi', 'speed', 'max_long_g', 'max_later_g','impact_g')
as.factor(c('ex_vert_asi', 'speed', 'max_long_g', 'max_later_g','impact_g')
)
c('ex_vert_asi', 'speed', 'max_long_g', 'max_later_g','impact_g')
c('loss_percent','ex_vert_asi', 'speed', 'max_long_g', 'max_later_g','impact_g')
rm_fit=randomForest(loss_percent ~ ., data=claims_cl, subset=c('loss_percent','ex_vert_asi', 'speed', 'max_long_g', 'max_later_g','impact_g'))
rm_fit=randomForest(loss_percent ~ ., data=claims_cl)
rm_fit=randomForest(loss_percent ~ ., data=claims_cl, na.action = na.pass )
rm_fit=randomForest(loss_percent ~ ., data=claims_cl, na.action = na.omit )
rf_claims=subset(claims_cl,select=c(loss_percent, ex_vert_asi,speed,impact_g)
rf_claims=subset(claims_cl,select=c(loss_percent, ex_vert_asi,speed,impact_g))
rf_claims=subset(claims_cl,select=c(loss_percent, ex_vert_asi,speed,impact_g))
rm_fit=randomForest(loss_percent ~ ., data=rf_claims, na.action = na.omit )
summary(rm_fit)
gg_e <- gg_error(rm_fit)
plot(gg_e)
rattle::fancyRpartPlot(rm_fit$finalModel)
install.packages('rattle')
library(rattle)
set.seed(4543)  # We many want to repeat the analysis
library(rattle)
rattle::fancyRpartPlot(rm_fit$finalModel)
imp <- importance(crimeRf)
varImpPlot(crimeRf, cex = 0.8)
imp <- importance(rf_fit)
varImpPlot(rf_fit, cex = 0.8)
imp <- importance(rm_fit)
varImpPlot(rm_fit, cex = 0.8)
swirl
swirl()
library(swirl)
swirl()
data("galton")
fin <- lm(child ~ parent, data = galton)
fin <- lm(child ~ parent, galton)
fit <- lm(child ~ parent, galton)
sqrt(sum(fit$residuals^2/(n-2)))
n
sqrt(sum(fit$residuals^2) / (n-2))
summary(fit)$sigma
deviance(fit) / (n-2)
sqrt(deviance(fit) / (n-2))
mu <- mean(galton$child)
sTot <- (galton$child-mu)^2
sTot <- sum((galton$child-mu)^2)
sRes=sum(deviance(fit))
sRes<-deviance(fit)
1-sRes/sTot
paly()
play()
sRes
sTot
nxt(0)
nxt()
summary(fit)$r.squared
cor(galton$child, galton$parent)^2
ones <- rep(1,nrow(galton))
lm(child ~ ones + parent -1)
lm(child ~ ones + parent -1, galton)
lm(child ~ parent, galton)
lm(child ~ 1, galton)
View(trees)
fit <- lm(Volume ~ Girth + Height + Constant -1, trees)
trees2 <- eliminate('Girth', trees)
View(trees2)
fit2 <- lm(Volume ~ Height + Constant -1, trees2)
lapply(list(fit,fit2),coef)
lm(Fertility ~ .,swiss)
all <- lm(Fertility ~ .,swiss)
summary(all)
lm(Fertility ~ Agriculture -1, swiss)
summary(lm(Fertility ~ Agriculture, swiss))
cor(swiss$Examination,swiss$Education)
cor(swiss$Agriculture,swiss$Education)
makelms()
ec<- swiss$Examination + swiss$Catholic
efit<- lm(Fertility ~ . + ec, swiss)
coef(all)-coef(efit)
all$coefficients - efit$coefficients
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
lm(y ~ x -1)
summary(lm(y ~ x -1))
summary(lm(y ~ x ))
fit=lm(y ~ x -1)
deviance(fit)
sd(fit$residuals)
fit=lm(y ~ mean(x) -1)
fit=lm(y ~ mean(x))
fit=lm(y ~ I(mean(x))
)
fit=lm(y ~ I(mean(x) -1 )
)
fit=lm(y ~ I(mean(x)) -1 )
fit=lm(y ~ I(mean(x))  )
fit
fit=lm(y ~ x )
summary(fit)
sd(fit$residuals)
lm(y ~ x*0)
summary(lm(y ~ x*0))
summary(lm(y ~ x*0 -1 ))
summary(lm(y ~ x*0 ))
mean(x)
sd(y-mean(x))
plot(x,y)
summary(fit)
deviance(fit)
sqrt(deviance(fit))
sqrt(sd(y-mean(x)))
fit$sigma
fit=lm(y ~ x -1)
fit$sigma
fit=lm(y ~ x)
fit$sigma
y
x
fit=lm(y ~ x)
fit$coefficients
yhat=predict(fit)
yhat
res=y-yhat
fit$residuals
y-yhat
n = length(y)
beta1=cor(x,y)*sd(y)/sd(x)
beta0=mean(y)-beta1*mean(x)
beta0
e=y-beta0-beta1*x
e
fit$residuals
e=fit$residuals
sigma<-sqrt(sum(e^2)/(n-2))
sigma
ssx<-sum((x-mean(x))^2)
ssx
seBeta0<-(1/n+mean(x)^2/ssx)^.5*sigma
seBeta0
seBeta1<-sigma/sqrt(ssx)
seBeta1
tBeta0<-beta0/seBeta0;tBeta1<-beta1/seBeta1
pBeta1<-2*pt(abs(tBeta1),df=n-2,lower.tail=FALSE)
pBeta1
fi
summary(fit)
sigma
𝚖𝚝𝚌𝚊𝚛𝚜
data(mtcars)
library(UsingR)
data(mtcars)
str(mtcars)
?mtcars
fit=lm(outcome ~ weight, mtcars)
fit=lm(mpg ~ weight, mtcars)
fit=lm(mpg ~ wt, mtcars)
summary(fit)
sumCoef=summary(fit)$coeficients
sumCoef
sumCoef=summary(fit)
sumCoef
sumCoef=summary(fit)$coef
sumCoef
sumCoef[1]1
sumCoef[1,1]
sumCoef[2,1]
fit$df
inter=sumCoef[1,1]
inter
sumCoef[1,1]+c(-1,1)*qt(.975,df=fit$df)*sumCoef[1,2]
sumCoef[1,1]+c(-1,1)*qt(.95,df=fit$df)*sumCoef[1,2]
sumCoef[2,1]+c(-1,1)*qt(.975,df=fit$df)*sumCoef[2,2]
?fit
str(fit)
summary(fit)
?qt
sumCoef[2,1]+c(-1,1)*qt(.975,df=fit$df)*sumCoef[2,2]
?mtcars
newdata=data.frame(wt=3000)
newdata=data.frame(wt=3)
p1=predict(fit,newdata,interval = 'confidence')
p1
p1=predict(fit,newdata,interval = 'prediction')
p1
sumCoef<-summary(fit)$coefficients
sumCoef
sumCoef[2,1]+c(-1,1)*qt(.975,df=fit$df)*sumCoef[2,2]
fit
sumCoef[2,1]+c(-1,1)*qt(.975,df=fit$df)*sumCoef[2,2]
a=sumCoef[2,1]+c(-1,1)*qt(.975,df=fit$df)*sumCoef[2,2]
a*2
y=1:20
x=1:10
summary(lm(y~x))
x=1:20
summary(lm(y~x))
fit
fit=lm(mpg ~ I(wt/100))
fit=lm(mpg ~ I(wt/100),mtcars)
summary(fit)
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
beta1=cor(y,x)*sd(y)/sd(x)
beta1
beta11=cor(y,x)*sd(y)/sd(x+1)
beta11
beta0=mean(y)-beta1*mean(x)
beta0
beta0=mean(y)-beta1*mean(x+2)
beta0
f=lm(y~x)
sum(f$residuals)
f=lm(y~x-1)
sum(f$residuals)
fit
fit=lm(mpg ~ wt, mtcars)
yhat1=predict(fit)
yhat
yhat1=fit$coefficients[1]
yhat
yhat1
yhat1=fit$coefficients[1]+mtcars$wt
yhat
yhat1
fit$coefficients[1]
fit$coefficients[1,1]
fit$coefficients[1]+mtcars$wt
yhat1
yhat2=fit$coefficients[1]+mtcars$wt*fit$coefficients[2]
yhat2
fit$coefficients[2]
predict(fit)
yhat2=predict(fit)
yhat
yhat2
se1=sum((y-yhat1)^2)
yhat1
mtcars$wt
mtcars$mpg
lenght(mtcars$mpg)
y
y<=mtcars$mpg
y<-mtcars$mpg
x<-mtcars$wt
beta1=cor(y,x)*sd(y)/sd(x)
beta0=mean(y)-mean(x)*beta1
beta0
yhat0=beta0+x
y=yhat0
yhat0
yhat1=beta0-beta1*x
yhat1
yhat1=beta0+beta1*x
yhat1
y<-mtcars$mpg
y
yhat0
yhat1
se0=sum((y-yhat0)^2)
se0
se1=sum((y-yhat1)^2)
se1
se0/se1
se1/se0
yhat0=beta0-x
yhat0
x
se0=sum((y-beta0)^2)
se0
se1
yhat0=beta0+x
yhat0
se0=sum((y-yhat0)^2)
se0
y <- mtcars$mpg; x <- mtcars$wt
fitWithIntercept <- lm(y ~ x)
yhat1 <- fit$coefficients[1] + x
se1 <- sum((y - yhat1)^2)
se1
yhat1
yhat1=beta0+beta1*x
yhat1
se1=sum((y - yhat1)^2)
se1
se1/se0
se0=sum((y-beta0)^2)
se1/se0
fit
newdata <- data.frame(wt = mean(mtcars$wt))
newdata
p1<-predict(fit,newdata,interval=("confidence"))
p1
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
fit=lm(y ~ x)
summary(fit)
fit$sigma
newdata <- data.frame(wt = 3)
fit=lm(mpg ~ wt,mtcars)
p1<-predict(fit,newdata,interval=("confidence"))
p1
p1<-predict(fit,newdata,interval=("prediction"))
p1
x <- c(0.18, -1.54, 0.42, 0.95)
mean(x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
fit=lm(y~x)
fit=lm(y~x-1)
summary(fit)
mtfit<-lm(mpg ~ wt, mtcars)
summary(mtfit)
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
(x[0]-mean(x))/sd(x)
x[0]
x
(8.58-mean(x))/sd(x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
fit
fit=lm(y~x)
summary(fit)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
mean(x)
View(claims_cl)
data(iris)
set.seed(17)
iris.urf <- randomForest(iris[, -5])
MDSplot(iris.urf, iris$Species)
rm_fit=randomForest(loss_percent ~ ., data=rf_claims, na.action = na.omit )
rf_claims=subset(claims_cl,select=c(loss_percent, ex_vert_asi,speed,impact_g))
gg_e <- gg_error(rm_fit)
plot(gg_e)
g<- ggplot(mw_claims,aes(x=abs(ex_vert_asi),y=loss_percent) )
#g= g + xlab('ASI"')
#g= g + xlab('Loss Percent %')
g=g+geom_point(size =2 , color = 'black', alpha=0.8)
#g=g+geom_point(aes(x=ex_vert_asi,y=loss_percent), size =3 , color = 'black', alpha=0.8)
g=g+geom_smooth(method = lm, color = 'red')
g
